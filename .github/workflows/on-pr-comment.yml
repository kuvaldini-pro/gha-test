name: on_pr_comment

on:
  issue_comment:
    types: [created] #, edited]

jobs:
  job_comment_on_pr:
    runs-on: ubuntu-latest
    outputs:
      triggered: ${{ github.event.issue.pull_request &&
          startsWith(github.event.comment.body, '/buildme') }}
      # pr_head_ref: steps.detect_pr.outputs.head_ref
      # pr_head_sha: steps.detect_pr.outputs.head_sha
      # pr_num: github.event.issue.number

    ## use as needs.job_comment_on_pr.outputs.triggered
    if: ${{ github.event.comment && 
          github.event.issue.pull_request &&
          startsWith(github.event.comment.body, '/buildme') }}
    steps:
      -
        name: Show context
        run: |
          cat >/dev/null <<'END'
            ${{ toJson(github) }}
          END
      - 
        name: GITHUB_ENV << REF,SHA
        id: detect_pr
        run: >
            curl ${{github.event.issue.pull_request.url}} \
            -H "Authorization: token ${{github.token}}" |
            jq -r '"PR_REF="+.head.ref, "PR_SHA="+ .head.sha, "PR_NUM="+(.number|tostring)'
            >>$GITHUB_ENV
      # - 
      #   name: Dispatch a new workflow
      #   run: |
      #     curl -fsSL ${{github.api_url}}/repos/${{github.repository}}/actions/workflows/build.yml/dispatches \
      #       -X POST \
      #       -d '{"ref":"main"}' \
      #       -H "Accept: application/vnd.github.v3+json" \
      #       -H "Authorization: token ${{github.token}}"
      #   #-d '{"ref":"refs/heads/pr/${{github.event.issue.number}}/merge"}' \
      #   #ref:refs/heads/pr/${{github.event.issue.number}}/merge
      - 
        name: Create a deployment
        run: |
          #data=$(jq -n "{ ref:$PR_REF, description: }")
          curl -fsSL ${{github.api_url}}/repos/${{github.repository}}/deployments \
            -X POST \
            -d '{"ref":"'"$PR_REF"'", "environment":"qa", "description":"Comment on PR '$PR_NUM'" }' \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{github.token}}"
      - 
        # Send reaction to comment to show build was triggered
        name: Reaction rocket to comment
        run: |
          curl -fsSL ${{github.event.comment.url}}/reactions \
            -X POST \
            -d '{"content":"rocket"}' \
            -H "Accept: application/vnd.github.squirrel-girl-preview+json" \
            -H "Authorization: token ${{github.token}}"
