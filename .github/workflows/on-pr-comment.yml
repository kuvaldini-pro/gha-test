name: on_pr_comment

on:
  issue_comment:
    types: [created] #, edited]

jobs:
  job_comment_on_pr:
    runs-on: ubuntu-latest
    outputs:
      triggered: ${{ github.event.issue.pull_request &&
          startsWith(github.event.comment.body, '/buildme') }}
      # pr_head_ref: steps.detect_pr.outputs.head_ref
      # pr_head_sha: steps.detect_pr.outputs.head_sha
      # pr_num: github.event.issue.number

    ## use as needs.job_comment_on_pr.outputs.triggered
    if: ${{ github.event.comment && 
          github.event.issue.pull_request &&
          startsWith(github.event.comment.body, '/buildme') }}
    steps:
      -
        name: Show context
        run: |
          cat >/dev/null <<'END'
            ${{ toJson(github) }}
          END
      - 
        name: GITHUB_ENV << REF,SHA
        id: detect_pr
        run: |
          curl ${{github.event.issue.pull_request.url}} |
            jq -r '"REF="+.head.ref, "SHA="+ .head.sha'      >>$GITHUB_ENV

          env
      - 
        name: Dispatch a new workflow
        run: |
          curl -fL ${{github.api_url}}/repos/${{github.repository}}/actions/workflows/builds.yml/dispatches \
            -X POST \
            -d '{"ref":"main"}' \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{github.token}}"
        #-d '{"ref":"refs/heads/pr/${{github.event.issue.number}}/merge"}' \
        #ref:refs/heads/pr/${{github.event.issue.number}}/merge
      - 
        # Send reaction to comment to show build was triggered
        name: Reaction rocket to comment
        run: |
          curl -fL ${{github.event.comment.url}}/reactions \
            -X POST \
            -d '{"content":"rocket"}' \
            -H "Accept: application/vnd.github.squirrel-girl-preview+json" \
            -H "Authorization: token ${{github.token}}"

  # build:
  #   runs-on: ubuntu-latest
  #   needs: job_comment_on_pr
  #   if: ${{ success() || needs.job_comment_on_pr.result == 'skipped' }}
  #   steps:
  #     - name: steps.triggered_by_pr_comment.outputs.skipped
  #       id: triggered_by_pr_comment
  #       run: |
  #         echo ::set-output name=skipped::${{needs.job_comment_on_pr.result == 'skipped'}}
  #         echo  >>$GITHUB_ENV     SKIPPED=${{needs.job_comment_on_pr.result == 'skipped'}}
  #         env
  #     -
  #       name: Show context
  #       run: |
  #         cat <<'END'
  #           ${{ toJson(github) }}
  #         END
  #     -
  #       name: Show needs
  #       run: |
  #         cat <<'END'
  #           ${{ toJson(needs) }}
  #         END
  #     - 
  #       run: echo "HELLO"
